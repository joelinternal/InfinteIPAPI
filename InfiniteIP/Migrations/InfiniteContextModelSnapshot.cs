// <auto-generated />
using System;
using InfiniteIP.DbUtils;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace InfiniteIP.Migrations
{
    [DbContext(typeof(InfiniteContext))]
    partial class InfiniteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("InfiniteIP.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AccountId"));

                    b.Property<string>("AccountName")
                        .HasColumnType("text");

                    b.HasKey("AccountId");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("InfiniteIP.Models.GmSheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("accountId")
                        .HasColumnType("integer");

                    b.Property<string>("billable")
                        .HasColumnType("text");

                    b.Property<string>("billrate")
                        .HasColumnType("text");

                    b.Property<string>("brspdMgr")
                        .HasColumnType("text");

                    b.Property<string>("duration")
                        .HasColumnType("text");

                    b.Property<DateTime>("enddate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("hours")
                        .HasColumnType("numeric");

                    b.Property<string>("loadedrate")
                        .HasColumnType("text");

                    b.Property<string>("location")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("payrate")
                        .HasColumnType("text");

                    b.Property<string>("program")
                        .HasColumnType("text");

                    b.Property<int>("projectId")
                        .HasColumnType("integer");

                    b.Property<string>("roleaspersow")
                        .HasColumnType("text");

                    b.Property<int>("sow")
                        .HasColumnType("integer");

                    b.Property<DateTime>("startdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("status")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GmSheet");
                });

            modelBuilder.Entity("InfiniteIP.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProjectId"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("integer");

                    b.Property<string>("ProjectName")
                        .HasColumnType("text");

                    b.HasKey("ProjectId");

                    b.HasIndex("AccountId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("InfiniteIP.Models.Sow", b =>
                {
                    b.Property<int>("sowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("sowId"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("integer");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<string>("sowName")
                        .HasColumnType("text");

                    b.HasKey("sowId");

                    b.HasIndex("AccountId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Sow");
                });

            modelBuilder.Entity("InfiniteIP.Models.Project", b =>
                {
                    b.HasOne("InfiniteIP.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("InfiniteIP.Models.Sow", b =>
                {
                    b.HasOne("InfiniteIP.Models.Account", "account")
                        .WithMany()
                        .HasForeignKey("AccountId");

                    b.HasOne("InfiniteIP.Models.Project", "project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.Navigation("account");

                    b.Navigation("project");
                });
#pragma warning restore 612, 618
        }
    }
}
